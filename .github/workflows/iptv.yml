name: Auto Update IPTV

on:
  workflow_dispatch:
  schedule:
    - cron: '0,30 * * * *'

env:
  TZ: Asia/Shanghai

jobs:
  merge-and-update:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        persist-credentials: true
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup environment
      run: echo "UPDATE_TIME=$(date +'%Y-%m-%d %H:%M:%S CST')" >> $GITHUB_ENV

    - name: Process IPTV sources
      run: |
        # 下载源文件
        wget -q https://raw.githubusercontent.com/0047ol/BRTV-Live-M3U8/main/BRTV.m3u -O brtv.m3u
        wget -q https://raw.githubusercontent.com/govan10/TV-list/refs/heads/main/%E5%A4%A9%E6%B4%A5%E8%81%94%E9%80%9A%E5%85%AC%E7%BD%91.m3u -O original.m3u

        # 处理北京台源
        sed -n '/北京/,+1p' brtv.m3u | sed -E '
            s|#EXTINF:(-1) tvg-name="([^"]+)",(.*)|#EXTINF:\1 tvg-id="\2" tvg-name="\2" tvg-logo="https://live.fanmingming.cn/tv/\2.png" group-title="北京",\3|
            1i#EXTM3U
        ' > beijing.m3u

        # 处理原始源
        sed '/group-title="北京"/,+1d' original.m3u > cleaned.m3u

        # 合并文件并去重
        awk '
        BEGIN {
            RS="\n\n";  # 设置空行为记录分隔符
            FS="\n";    # 设置字段分隔符为换行符
            print "#EXTM3U"
        }
        /^#EXTINF/ {
            # 提取tvg-id作为唯一标识
            match($1, /tvg-id="([^"]+)"/, arr)
            id = arr[1]
            
            # 当id不存在时存储记录
            if (id && !seen[id]++) {
                print $1
                print $2
            }
            next
        }
        {
            # 处理非EXTINF行
            if ($0 && !/^#EXTM3U/) print
        }
        ' beijing.m3u cleaned.m3u > iptv.m3u

        # 最终清理
        sed -i '/^$/d' iptv.m3u
        echo "更新时间：${UPDATE_TIME}" > README.md

    - name: Commit changes
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add .
        if git diff-index --quiet HEAD --; then
          echo "No changes"
        else
          git commit -m "自动更新: ${UPDATE_TIME}"
          git push origin HEAD:main
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
